<style>
  .navbar {
    width: 13rem;
    padding: 1.25rem;
    margin: 2rem 0.5rem 2rem 2rem;
    color: var(--text-brown, #3b2a1a);
    position: absolute;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    container-type: inline-size;
    background: #f5f5f4 url('<%= asset_path("parchment-texture.jpg") %>') repeat;
    z-index: 1000;
    top: 0;
    left: 0;
    overflow: visible;
  }
  @media (min-width: 640px) {
    .navbar { margin: 2.5rem 1rem 2.5rem 2.5rem; }
  }
  .navbar-header {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    max-width: 100%;
  }
  .avatar {
    height: 3rem;
    width: 3rem;
    /* organic, slightly random blob shape */
    border-radius: 28% 38% 22% 42% / 35% 25% 45% 30%;
    overflow: hidden;
    flex-shrink: 0;
    position: relative;
    border: 2px solid rgba(120, 84, 55, 0.5);
    background-color: rgba(246, 236, 206, 0.5);
    transform: rotate(-2deg);
  }
  .avatar img {
    display: block;
    height: 100%;
    width: 100%;
    object-fit: cover;
    opacity: 0.9;
    mix-blend-mode: multiply;
  }
  .avatar::after {
    content: "";
    position: absolute;
    inset: 0;
    background-image: url('<%= asset_path("parchment-texture.jpg") %>');
    background-size: cover;
    background-position: center;
    opacity: 0.18;
    mix-blend-mode: multiply;
    pointer-events: none;
    border-radius: inherit;
  }
  .avatar::before {
    content: "";
    position: absolute;
    inset: 0;
    box-shadow: inset 0 0 8px rgba(0,0,0,0.12);
    pointer-events: none;
    border-radius: inherit;
  }
  
  .meeple-avatar {
    height: 5.5rem;
    width: 5.5rem;
    border-radius: 28% 38% 22% 42% / 35% 25% 45% 30%;
    overflow: visible;
    flex-shrink: 0;
    position: relative;
    background-color: rgba(246, 236, 206, 0.5);
    transform: rotate(-2deg);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .meeple-content {
    transform: translate(0.2rem, -0.5rem) scale(1.4);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    overflow: visible;
  }
  
  .meeple-content canvas,
  .meeple-content .meeple-container {
    max-width: none !important;
    max-height: none !important;
    position: relative !important;
    overflow: visible !important;
  }
  
  /* Override chambers page styles that might interfere with navbar */
  .chambers-page .navbar {
    position: fixed !important;
    z-index: 1001 !important;
    overflow: visible !important;
  }
  
  /* Ensure meeple renders consistently across different pages */
  .chambers-page .navbar .meeple-content,
  .navbar .meeple-content {
    isolation: isolate;
    will-change: auto;
    overflow: visible !important;
  }
  
  .user-meta { flex: none; min-width: 0; }
  .user-name {
    font-family: "Jaini", "IM Fell English", serif;
    font-weight: 600;
    display: block;
    line-height: 1.1;
    font-size: clamp(1.2rem, 12cqi, 1.8rem);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .navbar-nav {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    font-size: 1.7rem;
    font-weight: 700;
    text-align: center;
  }
  .navbar-link {
    text-decoration: none;
    color: inherit;
    padding: 0.9rem 1.1rem;
    border-radius: 0.75rem;
    display: block;
    position: relative;
  }
  .navbar-link::after {
    content: "";
    position: absolute;
    left: 50%;
    bottom: 0.1rem;
    width: 60%;
    height: 18px;
    transform: translateX(-50%) translateY(2px);
    background-image: url('<%= asset_path("underline.webp") %>');
    background-repeat: no-repeat;
    background-size: 100% 100%;
    background-position: center bottom;
    opacity: 0;
    transition: opacity 160ms ease, transform 160ms ease;
    pointer-events: none;
  }
  .navbar-link:hover::after,
  .navbar-link.active::after {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }

  .navbar-link--disabled {
    pointer-events: none;
    cursor: not-allowed;
    opacity: 0.5;
  }
  .navbar-link--disabled::after { opacity: 0; }

  .navbar-link--admin {
    color: inherit;
    border: 4px dashed oklch(78.7% 0.168 66.29);
  }
  .navbar-link--admin:hover {
    color: inherit;
  }
  .navbar-link--admin.active {
    color: inherit;
  }

  /* Decorative double border */
  .navbar::before,
  .navbar::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
  }
  .navbar::before {
    border: 3px solid rgba(64, 43, 32, 0.75);
  }
  .navbar::after {
    inset: 6px;
    border: 3px dashed rgba(64, 43, 32, 0.55);
  }

  /* Decorative images */
  .navbar-decoration {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 72px;
    height: 24px;
    background-image: url('<%= asset_path("decoration.png") %>');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    pointer-events: none;
    z-index: 1;
  }
  .navbar-decoration.top {
    top: -24px;
  }
  .navbar-decoration.bottom {
    bottom: -23px;
    transform: translateX(-50%) rotate(180deg);
    pointer-events: auto;
  }
  
  /* Add left margin on keep page to account for navbar */
  <% if current_page?(keep_path) %>
  .app-main {
    margin-left: 17rem;
    margin-right: 1rem;
  }
  @media (max-width: 768px) {
    .app-main {
      margin-left: 0;
      margin-top: 22.1rem; /* Position content below navbar (1.3x left margin) */
      margin-right: 0.5rem;
    }
  }
  <% end %>
  
  /* Add left margin on individual project pages to account for navbar */
  <% if controller_name == "projects" && action_name == "show" %>
  .app-main {
    margin-left: 20rem;
    margin-right: 1rem;
    margin-top: 2rem;
  }
  @media (max-width: 768px) {
    .app-main {
      margin-left: 0;
      margin-top: 26rem; /* Position content below navbar (1.3x left margin) */
      margin-right: 0.5rem;
    }
  }
  <% end %>
  
   /* Add left margin on projects page to account for navbar */
   <% if current_page?(projects_path) %>
   .app-main {
     margin-left: 20rem;
     margin-right: 1rem;
     margin-top: 2rem;
   }
   @media (max-width: 768px) {
     .app-main {
       margin-left: 0;
       margin-top: 26rem; /* Position content below navbar (1.3x left margin) */
       margin-right: 0.5rem;
     }
   }
   <% end %>

   /* Add left margin on explore projects page to account for navbar */
   <% if current_page?(explore_projects_path) %>
   .app-main {
     margin-left: 20rem;
     margin-right: 1rem;
     margin-top: 2rem;
   }
   @media (max-width: 768px) {
     .app-main {
       margin-left: 0;
       margin-top: 26rem; /* Position content below navbar (1.3x left margin) */
       margin-right: 0.5rem;
     }
   }
   <% end %>
  
  /* Add left margin on admin pages to account for navbar */
  <% if controller_name == "admin" %>
  .app-main {
    margin-left: 20rem;
    margin-right: 1rem;
    margin-top: 2rem;
  }
  @media (max-width: 768px) {
    .app-main {
      margin-left: 0;
      margin-top: 26rem; /* Position content below navbar (1.3x left margin) */
      margin-right: 0.5rem;
    }
  }
  <% end %>
  
  /* Add left margin on review pages to account for navbar */
  <% if controller_name == "review" %>
  .app-main {
    margin-left: 20rem;
    margin-right: 1rem;
    margin-top: 2rem;
  }
  @media (max-width: 768px) {
    .app-main {
      margin-left: 0;
      margin-top: 26rem; /* Position content below navbar (1.3x left margin) */
      margin-right: 0.5rem;
    }
  }
  <% end %>
  
  /* Add left margin on fraud pages to account for navbar */
  <% if controller_name == "greg" %>
  .app-main {
    margin-left: 20rem;
    margin-right: 1rem;
    margin-top: 2rem;
  }
  @media (max-width: 768px) {
    .app-main {
      margin-left: 0;
      margin-top: 26rem; /* Position content below navbar (1.3x left margin) */
      margin-right: 0.5rem;
    }
  }
  <% end %>
  
  /* Add left margin on admin cosmetics and physical items pages */
  <% if params[:controller]&.start_with?("admin/") %>
  .app-main {
    margin-left: 20rem;
    margin-right: 1rem;
    margin-top: 2rem;
  }
  @media (max-width: 768px) {
    .app-main {
      margin-left: 0;
      margin-top: 26rem; /* Position content below navbar (1.3x left margin) */
      margin-right: 0.5rem;
    }
  }
  <% end %>
</style>
<aside class="navbar">
  <div class="navbar-decoration top" aria-hidden="true"></div>
  <div class="navbar-header">
    <% if user_signed_in? && current_user %>
      <div class="meeple-avatar">
        <div class="meeple-content" id="navbar-meeple-container">
          <!-- Meeple will render here -->
        </div>
      </div>
      <div class="user-meta">
        <h2 class="user-name"><%= current_user.current_slack_display_name.presence || "Unnamed Knight" %></h2>
      </div>
    <% end %>
  </div>
  <nav class="navbar-nav">
    <!-- Context-aware back button -->
    <% if controller_name == "projects" && action_name == "show" %>
      <%= link_to "← Back", projects_path, class: "navbar-link" %>
    <% elsif controller_name == "projects" && action_name == "new" %>
      <%= link_to "← Back", projects_path, class: "navbar-link" %>
    <% elsif controller_name == "projects" && action_name == "edit" %>
      <%= link_to "← Back", project_path(params[:id]), class: "navbar-link" %>
    <% elsif controller_name == "review" && action_name == "show" %>
      <%= link_to "← Back", review_path, class: "navbar-link" %>
    <% elsif controller_name == "greg" && action_name == "show" %>
      <%= link_to "← Back", fraud_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "users" %>
      <%= link_to "← Back", admin_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "user_details" %>
      <%= link_to "← Back", admin_users_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "projects" %>
      <%= link_to "← Back", admin_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "ballots" %>
      <%= link_to "← Back", admin_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "ballot_details" %>
      <%= link_to "← Back", admin_ballots_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "edit_ballot" %>
      <%= link_to "← Back", admin_ballot_details_path(params[:id]), class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "weekly_overview" %>
      <%= link_to "← Back", admin_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "weekly_overview_user" %>
      <%= link_to "← Back", admin_weekly_overview_path(week: params[:week]), class: "navbar-link" %>
    <% elsif controller_name == "ysws_review" && action_name == "show" %>
      <%= link_to "← Back", ysws_review_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "analytics" %>
      <%= link_to "← Back", admin_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "shop_purchases" %>
      <%= link_to "← Back", admin_path, class: "navbar-link" %>
    <% elsif controller_name == "admin" && action_name == "shop_purchase_details" %>
      <%= link_to "← Back", admin_shop_purchases_path, class: "navbar-link" %>
    <% else %>
      <%= link_to "← Back", castle_path, class: "navbar-link" %>
    <% end %>
    
    <!-- Main Navigation Links (hidden if on current page) -->
    <% unless current_page?(keep_path) %>
      <%= link_to "Keep", keep_path, class: "navbar-link" %>
    <% else %>
      <span class="navbar-link active">Keep</span>
    <% end %>
    
     <% unless current_page?(projects_path) %>
       <%= link_to "My Projects", projects_path, class: "navbar-link" %>
     <% else %>
       <span class="navbar-link active">Armory</span>
     <% end %>

     <% unless current_page?(explore_projects_path) %>
       <%= link_to "Explore", explore_projects_path, class: "navbar-link" %>
     <% else %>
       <span class="navbar-link active">Explore</span>
     <% end %>
    
    <% unless current_page?(great_hall_path) %>
      <%= link_to "Great Hall", great_hall_path, class: "navbar-link" %>
    <% else %>
      <span class="navbar-link active">Great Hall</span>
    <% end %>
    
    <% unless current_page?(market_path) %>
      <%= link_to "Market", market_path, class: "navbar-link" %>
    <% else %>
      <span class="navbar-link active">Market</span>
    <% end %>
    
    <% unless current_page?(chambers_path) %>
      <%= link_to "Chambers", chambers_path, class: "navbar-link" %>
    <% else %>
      <span class="navbar-link active">Chambers</span>
    <% end %>
    
    <!-- Admin Links (always shown if user has access) -->
    <% if can_access_review? %>
      <% unless current_page?(review_path) || (controller_name == "review") %>
        <%= link_to "Stonemason", review_path, class: "navbar-link navbar-link--admin" %>
      <% else %>
        <span class="navbar-link navbar-link--admin active">Stonemason</span>
      <% end %>
    <% end %>
    
    <% if current_user&.can_review? %>
      <% unless current_page?(ysws_review_path) || (controller_name == "ysws_review") %>
        <%= link_to "Review", ysws_review_path, class: "navbar-link navbar-link--admin" %>
      <% else %>
        <span class="navbar-link navbar-link--admin active">Review</span>
      <% end %>
    <% end %>
    
    <% if can_access_fraud_dashboard? %>
      <% unless current_page?(fraud_path) || (controller_name == "greg") %>
        <%= link_to "Fraud", fraud_path, class: "navbar-link navbar-link--admin" %>
      <% else %>
        <span class="navbar-link navbar-link--admin active">Fraud</span>
      <% end %>
    <% end %>
    
    <% if can_access_admin? %>
      <% unless current_page?(admin_path) || (controller_name == "admin") %>
        <%= link_to "Admin", admin_path, class: "navbar-link navbar-link--admin" %>
      <% else %>
        <span class="navbar-link navbar-link--admin active">Admin</span>
      <% end %>
    <% end %>
    

  </nav>
  <div class="navbar-decoration bottom" id="admin-key-trigger" aria-hidden="true"></div>
</aside>
<script>
  (function() {
    function initMessyMeepleAvatar() {
      var avatar = document.querySelector('.navbar .meeple-avatar');
      if (!avatar || avatar.dataset.messyInit === '1') return;
      avatar.dataset.messyInit = '1';
      var userKey = '<%= (current_user&.slack_id.presence || "guest") %>';
      var storageKey = 'messyMeepleAvatar:' + userKey;
      var now = Date.now();
      var oneDayMs = 24 * 60 * 60 * 1000;

      function rand(min, max) { return Math.round(Math.random() * (max - min) + min); }

      function generateShape() {
        var tl = rand(18, 46);
        var tr = rand(30, 60);
        var br = rand(12, 44);
        var bl = rand(28, 58);
        var v1 = rand(22, 52);
        var v2 = rand(15, 45);
        var v3 = rand(28, 60);
        var v4 = rand(18, 48);
        var radius = tl + '% ' + tr + '% ' + br + '% ' + bl + '% / ' + v1 + '% ' + v2 + '% ' + v3 + '% ' + v4 + '%';
        var rot = (Math.random() * 8 - 4).toFixed(1); // -4deg to 4deg
        return { radius: radius, rot: rot };
      }

      function applyShape(radius, rot) {
        avatar.style.borderRadius = radius;
        avatar.style.transform = 'rotate(' + rot + 'deg)';
      }

      var cached = null;
      try { cached = JSON.parse(localStorage.getItem(storageKey) || 'null'); } catch (e) { cached = null; }

      if (cached && cached.expiresAt && cached.radius && cached.rot && now < cached.expiresAt) {
        applyShape(cached.radius, cached.rot);
      } else {
        var shape = generateShape();
        applyShape(shape.radius, shape.rot);
        var expiresAt = now + oneDayMs;
        try { localStorage.setItem(storageKey, JSON.stringify({ radius: shape.radius, rot: shape.rot, expiresAt: expiresAt })); } catch (e) {}
      }
    }

    // Initialize the navbar meeple rendering
    function initNavbarMeeple() {
      const meepleContainer = document.getElementById('navbar-meeple-container');
      console.log('Navbar meeple container:', meepleContainer);
      if (!meepleContainer) {
        console.log('No navbar meeple container found, retrying...');
        setTimeout(initNavbarMeeple, 100);
        return;
      }

      // Use direct MeepleDisplay like the keep page does
      <% if current_user&.meeple %>
      // Get user's equipped cosmetics like the keep page
      const equippedCosmetics = [
        <% current_user.meeple.equipped_cosmetics.includes(cosmetic: { image_attachment: :blob }).each_with_index do |meeple_cosmetic, index| %>
          <% unless index == 0 %>,<% end %>{
            equipped: true,
            cosmetic: {
              id: '<%= meeple_cosmetic.cosmetic.id %>',
              name: '<%= meeple_cosmetic.cosmetic.name %>',
              type: '<%= meeple_cosmetic.cosmetic.type %>',
              image: {
                attached: <%= meeple_cosmetic.cosmetic.image.attached? %>,
                url: '<%= url_for(meeple_cosmetic.cosmetic.image) if meeple_cosmetic.cosmetic.image.attached? %>'
              }
            }
          }
        <% end %>
      ];

      const userData = {
        meeple: {
          color: '<%= current_user.meeple.color %>',
          imageSrc: '<%= image_path("meeple/meeple-#{current_user.meeple.color}.png") %>',
          meeple_cosmetics: equippedCosmetics
        }
      };

      console.log('Navbar user data:', userData);
      
      if (typeof window.MeepleDisplay !== 'undefined') {
        try {
          console.log('Rendering navbar meeple with MeepleDisplay');
          const meepleDisplay = new window.MeepleDisplay(userData, 84, 84);
          meepleDisplay.renderToHTML(meepleContainer);
          console.log('Navbar meeple render complete');
        } catch (e) {
          console.log('Navbar meeple render failed:', e);
        }
      } else {
        console.log('MeepleDisplay not available, retrying...');
        setTimeout(initNavbarMeeple, 100);
      }
      <% else %>
      console.log('No user meeple found');
      <% end %>
    }

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', function() {
        initMessyMeepleAvatar();
        initNavbarMeeple();
      }, { once: true });
    } else {
      initMessyMeepleAvatar();
      initNavbarMeeple();
    }
  })();

       // Admin key verification
   (function() {
     const adminTrigger = document.getElementById('admin-key-trigger');
     if (!adminTrigger) return;

             adminTrigger.addEventListener('click', function() {
        showModalPrompt(
          'Enter admin key:',
          'Admin Access',
          (key) => {
            if (!key) return;

            fetch('/verify_admin_key', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
              },
              body: JSON.stringify({ admin_key: key })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                showModalPrompt(
                  'Admin key verified! Select your rank:\n\nuser - Basic user\nviewer - Can view projects\nadmin - Can manage users\nsuper_admin - Full admin access\n\nEnter rank:',
                  'Select Rank',
                  (rank) => {
                    if (!rank) return;

                    fetch('/set_rank', {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
                      },
                      body: JSON.stringify({ rank: rank.toLowerCase() })
                    })
                    .then(response => response.json())
                    .then(rankData => {
                      if (rankData.success) {
                        showModalAlert(rankData.message, 'Success');
                        location.reload();
                      } else {
                        showModalAlert(rankData.message, 'Error');
                      }
                    })
                    .catch(error => {
                      console.error('Error:', error);
                      showModalAlert('An error occurred while setting the rank.', 'Error');
                    });
                  },
                  () => {},
                  'Enter rank'
                );
              } else {
                showModalAlert(data.message, 'Error');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              showModalAlert('An error occurred while verifying the key.', 'Error');
            });
          },
          () => {},
          'Enter admin key'
        );
      });
   })();
</script>
